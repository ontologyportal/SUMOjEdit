<project xmlns:ivy="antlib:org.apache.ivy.ant"
         name="SUMOjEdit" default="all" basedir=".">
    <description>
        This is an ant build.xml file for building the SUMOjEdit plugin for jEdit.
    </description>

    <property name="ivy.install.version" value="2.5.1"/>
    <property name="ivy.home" value="${basedir}/.ivy"/>
    <property name="ivy.jar.dir" value="${ivy.home}/lib"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

    <property environment="env"/>
    <property name="jedit.home" value="${env.JEDIT_HOME}"/>
    <property name="git.home" value="${env.ONTOLOGYPORTAL_GIT}"/>
    <property name="tptp.home" value="${git.home}/TPTP-ANTLR"/>
    <property name="build.home" value="build"/>
    <property name="build.test.classes.dir" value="${build.home}/test/classes"/>
    <property name="unit.test.suite" value="com.articulate.sigma.jedit.UnitTestSuite"/>
    <property name="test.unit.dir" value="test/unit/java"/>
    <property name="reports.dir" value="${build.home}/reports"/>
    <property name="report.html" value="file:${basedir}/${reports.dir}/html/index.html"/>

    <property name="javac.release" value="11"/>
    <property name="run.jvmargs" value="-Xmx10g -Xss1m"/>

    <path id="core.sourcepath">
        <pathelement path="src"/>
    </path>

    <path id="test.sourcepath">
        <pathelement path="${test.unit.dir}/com/articulate/sigma"/>
    </path>

    <condition property="isUnixNotMac">
        <and>
            <os family="unix"/>
            <not>
                <os family="mac"/>
            </not>
        </and>
    </condition>

    <target name="check.for.ivy.jar">
        <available file="${ivy.jar.file}" property="ivy.present"/>
    </target>

    <target name="download-ivy" depends="check.for.ivy.jar" unless="ivy.present">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load Ivy here from Ivy home, in case the user has not already dropped
                it into Ant's lib dir (note that the latter copy will always take precedence).
                We will not fail as long as local lib dir exists (it may be empty) and
                Ivy is in at least one of Ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
        <ivy:retrieve/>

        <path id="compile.classpath">
            <fileset dir="lib">
                <include name="*.jar"/>
                <exclude name="junit*"/>
                <exclude name="hamcrest*"/>
            </fileset>
        </path>
        <path id="runtime.classpath">
            <path refid="compile.classpath"/>
            <pathelement location="${build.home}/classes"/>
        </path>
        <path id="compile.test.classpath">
            <path refid="runtime.classpath"/>
            <pathelement location="${build.test.classes.dir}"/>
            <pathelement path="lib/hamcrest-core-1.3.jar:lib/junit-4.13.2.jar"/>
        </path>
        <path id="run.test.classpath">
            <path refid="compile.test.classpath"/>
            <pathelement location="${build.test.classes}"/>
        </path>
    </target>

    <target name="init" depends="init-ivy">
        <!-- Builds the SigmaUtils and TPTP jars as part of SigmaKee's init -->
        <ant antfile="../sigmakee/build.xml" inheritAll="false" target="all" />
        <copy todir="lib" file="../sigmakee/build/sigmakee.jar" />
        <echo message="JEDIT_HOME is set to = ${jedit.home}"/>
    </target>

    <target name="TPTP" depends="init">
        <echo message="SIGMA_HOME is set to = ${env.SIGMA_HOME}"/>
        <echo message="TPTP is set to = ${tptp.home}"/>
        <copy todir="${basedir}/lib" file="${tptp.home}/tptp.jar" />
        <copy todir="${basedir}/lib" file="../SigmaUtils/sigmaUtils.jar" />
    </target>

    <target name="compile" depends="TPTP" description="Compile SUMOjEdit">
        <mkdir dir="build/classes"/>
        <javac destdir="build/classes"
               debug="on"
               optimize="on"
               deprecation="on"
               includeantruntime="false"
               classpathref="compile.classpath"
               release="${javac.release}">
            <src refid="core.sourcepath"/>
        </javac>
        <copy todir="build/classes" file="config/SUMOjEdit.props" />
        <copy todir="build/classes" file="config/actions.xml" />
    </target>

    <target name="compile.test" depends="compile">
        <mkdir dir="${build.test.classes.dir}"/>
        <javac destdir="${build.test.classes.dir}"
               debug="on"
               optimize="on"
               deprecation="on"
               includeantruntime="false"
               classpathref="compile.test.classpath">
            <src refid="test.sourcepath"/>
        </javac>
        <mkdir dir="${reports.dir}"/>
    </target>

    <target name="dist" depends="compile.test" description="Create the *.war file and place in build.">
        <jar destfile="SUMOjEdit.jar">
            <fileset dir="build/classes"/>
        </jar>
    </target>

    <!--
    =====
    ADMIN
    =====
    -->

    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="build"/>
        </delete>
        <delete file="SUMOjEdit.jar"/>

        <!-- for dep updates, clean ${jedit.home}/jars -->
        <delete>
            <fileset dir="${jedit.home}/jars">
                <include name="antlr4*"/>
                <include name="guava*"/>
                <include name="java-prolog*"/>
                <include name="kryo*"/>
                <include name="minlog*"/>
                <include name="objenesis*"/>
                <include name="reflectasm*"/>
                <include name="sigmaUtils*"/>
                <include name="sigmakee*"/>
                <include name="SUMOjEdit*"/>
                <include name="tptp*"/>
            </fileset>
        </delete>
    </target>

    <target name="deploy" depends="dist">
        <copy todir="${jedit.home}/jars" file="SUMOjEdit.jar" />
        <copy todir="${jedit.home}/jars">
            <fileset dir="lib">
                <exclude name="hamcrest-core-1.3.jar"/>
                <exclude name="junit-4.13.2.jar"/>
                <exclude name="jedit.jar"/>
                <!-- including the jedit.jar in .jedit/jars causes strange problems -->
            </fileset>
        </copy>
        <copy todir="${jedit.home}/modes" file="kif.xml" overwrite="true"/>
        <copy todir="${jedit.home}/modes" file="catalog" overwrite="true"/>
        <copy todir="${jedit.home}/modes" file="TPTP.xml" overwrite="true"/>
        <echo>deploying SUMOjEdit.jar, supporting files and supporting jars</echo>
    </target>

    <target name="append.bashrc" if="isUnixNotMac">
        <echo file="${user.home}/.bashrc" append="true">
## jEdit
export JEDIT_HOME=~/.jedit
alias jedit="java -Xmx10g -Xss1m -jar /usr/share/jedit/jedit.jar"
</echo>
    </target>

    <target name="append.zshrc" unless="isUnixNotMac">
        <echo file="${user.home}/.zshrc" append="true">
## jEdit
export JEDIT_HOME=~/Library/jEdit
alias jedit="java -Xmx10g -Xss1m -jar /Applications/jEdit.app/Contents/Java/jedit.jar"
</echo>
    </target>

    <target name="all" depends="deploy">
        <tstamp>
            <format property="TODAY_US" pattern="yyyy-MM-dd HH:mm:ss:sss zzz" locale="en,US"/>
        </tstamp>
        <echo>the system date/time is ${TODAY_US}</echo>
    </target>

    <!--
    ===================
    RUN TASKS FOR TESTS
    ===================
    -->

    <target name="test" depends="test.unit"/>
    <target name="test.unit" depends="clean,compile.test" description="Runs the UnitTestSuite">
        <junit printsummary="yes"
               haltonfailure="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="run.test.classpath"/>
            </classpath>
            <test name="${unit.test.suite}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="junit.report"/>
    </target>
    <target name="junit.report" >
        <junitreport todir="${reports.dir}">
            <fileset dir="${reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.dir}/html"/>
        </junitreport>
        <antcall target="open.junit.report"/>
    </target>
    <target name="open.junit.report" depends="report.mac,report.unix"/>
    <target name="report.mac">
        <exec executable="sh" osfamily="mac">
            <arg value="-c"/>
            <arg value="open -u ${report.html}"/>
        </exec>
    </target>
    <target name="report.unix" if="isUnixNotMac">
        <exec executable="sh" osfamily="unix">
            <arg value="xdg-open ${report.html}"/>
        </exec>
    </target>

</project>
