<!DOCTYPE ACTIONS SYSTEM "actions.dtd">
<ACTIONS>
    <ACTION NAME="sumojedit.show-stats">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.showStats();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.check-errors">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.checkErrors();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.format-select">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.formatSelect();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.goto-defn">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.gotoDefn();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.browse-term">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.browseTerm();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.chooseE">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.chooseE();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.chooseVamp">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.chooseVamp();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.setFOF">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.setFOF();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.setTFF">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.setTFF();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.query-exp">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.queryExp();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.to-tptp">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.toTPTP();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.from-tptp">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.fromTPTP();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.tptp.format-buffer">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.tptpFormatBuffer();
        </CODE>
    </ACTION>
    <ACTION NAME="sumojedit.tptp.check-buffer">
        <CODE>
            jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.tptpCheckBuffer();
        </CODE>
    </ACTION>

    <!-- ===== AutoComplete menu item with AC-mode + robust fallback ===== -->
    <ACTION NAME="sumojedit.autoComplete">
        <CODE>
            String mode = jEdit.getProperty("sumojedit.ac.mode","BOTH");
            if ("DROPDOWN_ONLY".equals(mode) || "BOTH".equals(mode)) {
                boolean invoked = false;
                try {
                    // Try the plugin's drop-down first
                    jEdit.getPlugin("com.articulate.sigma.jedit.SUMOjEditPlugin").sje.autoComplete();
                    invoked = true;
                } catch (Throwable t) {
                    // ignore and fall back
                }
                try {
                    // Always fall back to jEdit's built-in drop-down (guaranteed popup)
                    jEdit.getActionContext().invokeAction(view, "complete-word");
                    invoked = true;
                } catch (Throwable t2) {
                    // If even built-in fails, give a tiny hint (comment out if you prefer silence)
                    org.gjt.sp.jedit.Macros.message(view, "AutoComplete unavailable.");
                }
            } else {
                // AC drop-down disabled by mode; do nothing.
            }
        </CODE>
    </ACTION>

    <!-- ===== New: User Guide popup (scrollable + resizable) ===== -->
    <ACTION NAME="sumojedit.ac.user-guide">
      <CODE><![CDATA[
        import javax.swing.*;
        import java.awt.*;

        String title = jEdit.getProperty("sumo.ac.userguide.title", "AutoComplete (AC) User Guide");
        String body  = jEdit.getProperty("sumo.ac.userguide.text",
            "Welcome to the AutoComplete (AC) User Guide.\\n\\n" +
            "Replace this text via 'sumo.ac.userguide.text' in config/SUMOjEdit.props.\\n\\n" +
            "Click OK to dismiss.");

        JTextArea textArea = new JTextArea(body);
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        textArea.setCaretPosition(0);

        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setPreferredSize(new Dimension(700, 480));

        JOptionPane optionPane = new JOptionPane(scrollPane, JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog = optionPane.createDialog(view, title);
        dialog.setModal(false);
        dialog.setResizable(true);
        dialog.setVisible(true);
      ]]></CODE>
    </ACTION>

    <!-- ===== New: Autocomplete mode toggles ===== -->
        <ACTION NAME="sumojedit.ac.mode.ghost">
            <CODE>
                String mode = jEdit.getProperty("sumojedit.ac.mode", "BOTH");
                boolean ghostOn = "GHOST_ONLY".equals(mode) || "BOTH".equals(mode);
                boolean dropOn  = "DROPDOWN_ONLY".equals(mode) || "BOTH".equals(mode);
                if (ghostOn) {
                    if (dropOn) {
                        jEdit.setProperty("sumojedit.ac.mode", "DROPDOWN_ONLY");
                        jEdit.setProperty("sumo.autocomplete.mode", "popup");
                        Macros.message(view, "Autocomplete mode: Drop-down only");
                    } else {
                        jEdit.setProperty("sumojedit.ac.mode", "OFF");
                        jEdit.setProperty("sumo.autocomplete.mode", "off");
                        Macros.message(view, "Autocomplete mode: Off");
                    }
                } else {
                    if (dropOn) {
                        jEdit.setProperty("sumojedit.ac.mode", "BOTH");
                        jEdit.setProperty("sumo.autocomplete.mode", "both");
                        Macros.message(view, "Autocomplete mode: Ghost-text + Drop-down");
                    } else {
                        jEdit.setProperty("sumojedit.ac.mode", "GHOST_ONLY");
                        jEdit.setProperty("sumo.autocomplete.mode", "ghost_only");
                        Macros.message(view, "Autocomplete mode: Ghost-text only");
                    }
                }
            </CODE>
            <IS_SELECTED>
                String m = jEdit.getProperty("sumojedit.ac.mode", "BOTH");
                return "GHOST_ONLY".equals(m) || "BOTH".equals(m);
            </IS_SELECTED>
        </ACTION>

        <ACTION NAME="sumojedit.ac.mode.dropdown">
            <CODE>
                String mode = jEdit.getProperty("sumojedit.ac.mode", "BOTH");
                boolean dropOn  = "DROPDOWN_ONLY".equals(mode) || "BOTH".equals(mode);
                boolean ghostOn = "GHOST_ONLY".equals(mode) || "BOTH".equals(mode);
                if (dropOn) {
                    if (ghostOn) {
                        jEdit.setProperty("sumojedit.ac.mode", "GHOST_ONLY");
                        jEdit.setProperty("sumo.autocomplete.mode", "ghost_only");
                        Macros.message(view, "Autocomplete mode: Ghost-text only");
                    } else {
                        jEdit.setProperty("sumojedit.ac.mode", "OFF");
                        jEdit.setProperty("sumo.autocomplete.mode", "off");
                        Macros.message(view, "Autocomplete mode: Off");
                    }
                } else {
                    if (ghostOn) {
                        jEdit.setProperty("sumojedit.ac.mode", "BOTH");
                        jEdit.setProperty("sumo.autocomplete.mode", "both");
                        Macros.message(view, "Autocomplete mode: Ghost-text + Drop-down");
                    } else {
                        jEdit.setProperty("sumojedit.ac.mode", "DROPDOWN_ONLY");
                        jEdit.setProperty("sumo.autocomplete.mode", "popup");
                        Macros.message(view, "Autocomplete mode: Drop-down only");
                    }
                }
            </CODE>
            <IS_SELECTED>
                String m = jEdit.getProperty("sumojedit.ac.mode", "BOTH");
                return "DROPDOWN_ONLY".equals(m) || "BOTH".equals(m);
            </IS_SELECTED>
        </ACTION>

    <!-- ===== New: SUMOjEdit Version/Build Number ===== -->
    <ACTION NAME="sumojedit.show-version">
        <CODE><![CDATA[
            // Use the generated BuildInfo class as the single source of truth.
            String full = com.articulate.sigma.jedit.BuildInfo.getFullVersion();

            // Centered, compact two-line HTML with minimal spacing
            String html =
                "<html>" +
                "<div style='text-align:center;'>" +
                    "<div style='font-weight:bold; margin:0; padding:0;'>" + full + "</div>" +
                    "<div style='margin-top:4px; padding:0;'>A syntax aware editor for SUMO (Suggested Upper Merged Ontology)</div>" +
                "</div>" +
                "</html>";

            javax.swing.JLabel label = new javax.swing.JLabel(html, javax.swing.SwingConstants.CENTER);
            javax.swing.JOptionPane.showMessageDialog(
                view,
                label,
                "About SUMOjEdit",
                javax.swing.JOptionPane.INFORMATION_MESSAGE
            );
        ]]></CODE>
    </ACTION>
</ACTIONS>