# Set to startup to immediately start loading the KBs from serialized files, or
# compile from scratch if it's the first time they been compiled
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.activate=startup

# Even if you don't store additional files, this is a good idea to set:
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.usePluginHome=true

# Required for all plugins:
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.name=SUMOjEdit
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.author=Adam Pease
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.description=A syntax aware editor for the Suggested Upper Merged Ontology (SUMO)
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.version=1.1.0

# Supporting libs
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.jars=\
    antlr4-runtime-4.9.3.jar \
    guava-19.0.jar \
    java-prolog-parser-2.0.2.jar \
    kryo-5.6.2.jar \
    minlog-1.3.1.jar \
    objenesis-3.4.jar \
    reflectasm-1.11.9.jar \
    sigmaAntlr.jar \
    sigmaUtils.jar \
    sigmakee.jar \
    tomcat-servlet-api-9.0.107.jar \
    tptp.jar

# online help
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.docs=index.html

# Plugin dependencies
# See jEdit.getBuild() to understand version numbering scheme.
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.depend.0=jedit 05.05.99.00
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.depend.1=jdk 11
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.depend.2=plugin errorlist.ErrorListPlugin 2.4.0

# View plugin sub-menu - a list of actions or separators
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.menu=\
  sumojedit.browse-term \
  sumojedit.check-errors \
  sumojedit.format-select \
  sumojedit.goto-defn \
  sumojedit.query-exp \
  sumojedit.show-stats \
  - \
  sumojedit.setFOF \
  sumojedit.setTFF \
  - \
  sumojedit.chooseE \
  sumojedit.chooseVamp \
  - \
  sumojedit.from-tptp \
  sumojedit.to-tptp \
  - \
  sumojedit.ac.user-guide \
  - \
  sumojedit.ac.mode.off \
  sumojedit.ac.mode.ghost \
  sumojedit.ac.mode.dropdown \
  sumojedit.ac.mode.both

# action labels for actions supplied by actions.xml
sumojedit.show-stats.label=show statistics for buffer
sumojedit.check-errors.label=check for SUO-KIF errors
sumojedit.format-select.label=format axioms
sumojedit.goto-defn.label=go to definition
sumojedit.browse-term.label=browse term in Sigma
sumojedit.setFOF.label=select FOF language
sumojedit.setTFF.label=select TFF language
sumojedit.chooseVamp.label=select Vampire
sumojedit.chooseE.label=select EProver
sumojedit.query-exp.label=query on highlighted expression
sumojedit.to-tptp.label=SUO-KIF to TPTP
sumojedit.from-tptp.label=SUO-KIF from TPTP

# ===== User Guide menu item label =====
sumojedit.ac.user-guide.label=AutoComplete (AC) User Guide

# ==== NEW: Labels + default for AC mode actions ====
sumojedit.ac.mode.off.label=AC: Off
sumojedit.ac.mode.ghost.label=AC: Ghost-Text Mode
sumojedit.ac.mode.dropdown.label=AC: Drop-Down Mode
sumojedit.ac.mode.both.label=AC: Dual Mode

# Default AC mode (read at startup and used by the toggles)
sumojedit.ac.mode=BOTH

# ===== NEW: User Guide dialog strings =====
# Title for the dialog
sumo.ac.userguide.title=AutoComplete (AC) User Guide

# Body text for the dialog (\n for line breaks). 
sumo.ac.userguide.text=Welcome to the AutoComplete (AC) User Guide.\n\n\
The AC feature in SUMOjEdit is designed to make writing and editing ontology terms faster, \
easier, and less error-prone. By predicting what you intend to type, it reduces keystrokes \
and helps ensure consistent use of terms across your files.\n\n\
\
###\n\n\
\
To use AC, simply begin typing a term. Depending on the selected mode, suggestions will \
appear either inline, in the drop-down menu, or in both.\n\n\
\
There are several modes of AC, each tailored to different editing preferences:\n\n\
\
OFF mode disables all AC functionality. Select this mode if you prefer typing without \
any suggestions.\n\n\
\
GHOST TEXT mode* displays suggestions inline, shown in a faint gray color directly after \
the cursor. In this mode, pressing the LEFT CONTROL (CTRL) key accepts the suggestion.\n\n\
\
DROP-DOWN mode** provides a pop-up list of suggestions beneath the cursor. You can use the \
UP and DOWN ARROW keys to navigate through the list and the TAB key to insert the suggested \
term. This mode is useful when multiple possible completions exist.\n\n\
\
DUAL MODE combines Ghost Text mode and Drop-Down mode, offering both inline and pop-up \
suggestions at the same time. This mode provides the most guidance and flexibility. The \
key bindings do not change.\n\n\
\
*Ghost Text mode only suggests words belonging to logical operators and some fundamental \
relations in SUMO, such as "exists," "instance," "and," "or," "greaterThan," etc.\n\n\
\
**Drop-Down mode only suggests SUMO terms (as defined in the .kif files) in the sumo \
repository.\n\n\
\
###\n\n\
\
You can switch modes at any time by navigating to the Plugins menu > SUMOjEdit, then \
selecting the desired AC mode. A small status message will confirm the change.\n\n\
\
If you find suggestions distracting or overwhelming, try Ghost Text mode for subtle \
guidance or turning AC Off entirely. If you prefer more explicit support, the Drop-Down \
mode or Dual Mode options may be better suited for you.\n\n\
\
###\n\n\
\
We'd love to hear your feedback! Tell us what you like about AC and how we can make it \
even better!\
\
\n\n\n\
\
Close this dialog by clicking OK.
