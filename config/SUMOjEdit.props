# Set to startup to immediately start loading the KBs from serialized files, or
# compile from scratch if it's the first time they been compiled
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.activate=startup

# Even if you don't store additional files, this is a good idea to set:
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.usePluginHome=true

# Required for all plugins:
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.name=SUMOjEdit
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.author=Adam Pease
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.description=A syntax aware editor for the Suggested Upper Merged Ontology (SUMO) - Build @BUILD_NUMBER@
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.version=1.1.0
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.build=Build information available at runtime

# Supporting libs
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.jars=\
    antlr4-runtime-4.9.3.jar \
    guava-19.0.jar \
    java-prolog-parser-2.0.2.jar \
    kryo-5.6.2.jar \
    minlog-1.3.1.jar \
    objenesis-3.4.jar \
    reflectasm-1.11.9.jar \
    sigmaAntlr.jar \
    sigmaUtils.jar \
    sigmakee.jar \
    tomcat-servlet-api-9.0.107.jar \
    tptp.jar

# online help
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.docs=index.html

# Plugin dependencies
# See jEdit.getBuild() to understand version numbering scheme.
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.depend.0=jedit 05.05.99.00
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.depend.1=jdk 11
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.depend.2=plugin errorlist.ErrorListPlugin 2.4.0

# View plugin sub-menu - a list of actions or separators
plugin.com.articulate.sigma.jedit.SUMOjEditPlugin.menu=\
  sumojedit.show-version \
  - \
  sumojedit.browse-term \
  sumojedit.check-errors \
  sumojedit.format-select \
  sumojedit.goto-defn \
  sumojedit.query-exp \
  sumojedit.show-stats \
  - \
  sumojedit.setFOF \
  sumojedit.setTFF \
  - \
  sumojedit.chooseE \
  sumojedit.chooseVamp \
  - \
  sumojedit.from-tptp \
  sumojedit.to-tptp \
  - \
  sumojedit.ac.user-guide \
  - \
  sumojedit.ac.mode.ghost \
  sumojedit.ac.mode.dropdown

# action labels for actions supplied by actions.xml
sumojedit.show-version.label=About SUMOjEdit
sumojedit.show-stats.label=show statistics for buffer
sumojedit.check-errors.label=check for SUO-KIF errors
sumojedit.format-select.label=format axioms
sumojedit.goto-defn.label=go to definition
sumojedit.browse-term.label=browse term in Sigma
sumojedit.setFOF.label=select FOF language
sumojedit.setTFF.label=select TFF language
sumojedit.chooseVamp.label=select Vampire
sumojedit.chooseE.label=select EProver
sumojedit.query-exp.label=query on highlighted expression
sumojedit.to-tptp.label=SUO-KIF to TPTP
sumojedit.from-tptp.label=SUO-KIF from TPTP

# ===== User Guide menu item label =====
sumojedit.ac.user-guide.label=AutoComplete (AC) User Guide

# ==== NEW: Labels + default for AC mode actions ====
sumojedit.ac.mode.ghost.label=AC: Ghost-Text Mode
sumojedit.ac.mode.dropdown.label=AC: Drop-Down Mode

# Default AC mode (read at startup and used by the toggles)
sumojedit.ac.mode=BOTH

# ===== NEW: User Guide dialog strings =====
# Title for the dialog
sumo.ac.userguide.title=AutoComplete (AC) User Guide

# Body text for the dialog (\n for line breaks). 
sumo.ac.userguide.text=Welcome to the AutoComplete (AC) User Guide.\n\n\
The AC feature in SUMOjEdit helps make writing and editing ontology terms faster, easier, and less error-prone by predicting what you intend to type. This reduces keystrokes and helps ensure consistent use of terms across your files.\n\n\
Depending on which suggestion types are enabled, AC completions will appear inline (ghost text), in a drop-down list, or both.\n\n\
You can independently enable or disable two types of suggestions in AC:\n\n\
GHOST TEXT suggestions* appear inline as faint gray text directly after the cursor. In this mode, pressing the LEFT CONTROL (CTRL) key accepts the suggestion.\n\n\
DROP-DOWN suggestions** provide a pop-up list of completion options beneath the cursor. Use the UP and DOWN ARROW keys to navigate the list, and press TAB to insert the highlighted term.\n\n\
If both Ghost Text and Drop-Down suggestions are enabled, AC offers both inline and pop-up completions at the same time. If only one is enabled, AC provides only that type of completion. If neither is enabled, AC is completely off.\n\n\
*Ghost Text suggestions include common logical operators and fundamental relations in SUMO (e.g., "exists", "instance", "and", "or", "greaterThan", etc.).\n\n\
**Drop-Down suggestions include SUMO terms as defined in the ontology (.kif) files.\n\n\
You can toggle Ghost Text and Drop-Down modes on or off at any time via the Plugins menu > SUMOjEdit. A checkmark next to each indicates it is enabled, and a status message will confirm the change.\n\n\
We'd love to hear your feedback! Tell us what you like about AC and how we can make it even better!\n\n\
Close this dialog by clicking OK.
